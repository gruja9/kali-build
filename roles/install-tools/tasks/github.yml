---
- name: Create temporary build directory
  ansible.builtin.tempfile:
    state: directory
  register: build_dir

- name: "Copying python script to download github releases"
  copy:
    src: "files/githubdownload.py"
    dest: "{{ build_dir.path }}/githubdownload.py"
    mode: 0755

- name: "Downloading github releases"
  shell: "{{ build_dir.path }}/githubdownload.py {{ item.repo }} {{ item.regex }} {{ item.location }} {% if item.filename is defined %}{{ item.filename }}{% endif %}"
  loop:
   # - { repo: "carlospolop/PEASS-ng",  regex: "linpeas.sh", location: "{{ ansible_env.HOME }}/Downloads" }
   # - { repo: "carlospolop/PEASS-ng",  regex: "winPEASx64.exe", location: "{{ ansible_env.HOME }}/Downloads" }
   # - { repo: "obsidianmd/obsidian-releases",  regex: '{{ "Obsidian-\d\.\d\.\d+\.AppImage" | regex_escape() }}', location: "{{ ansible_env.HOME }}/Downloads", filename: "obsidian"} # Not needed
   # - { repo: "ly4k/BloodHound", regex: "BloodHound-linux-x64.zip", location: "{{ ansible_env.HOME }}/Downloads"}
    - { repo: "RustScan/RustScan", regex: "amd64.deb", location: "{{ ansible_env.HOME }}/Downloads", filename: "rustscan.deb"}
  async: 45
  poll: 0

- name: "Cloning GitHub repositories"
  git:
    repo: "{{ item.repo }}"
    dest: "{{ item.dest }}"
  loop:
    - { repo: "https://github.com/Acceis/bqm", dest: "{{ ansible_env.HOME }}/Downloads/bqm"}
    - { repo: "https://github.com/The-Z-Labs/linux-exploit-suggester", dest: "{{ ansible_env.HOME }}/Downloads/linux-exploit-suggester"}
    - { repo: "https://github.com/dadevel/impacket-zsh-integration.git", dest: "{{ ansible_env.HOME }}/.local/share/impacket-zsh-integration"}
    - { repo: "https://github.com/xjasonlyu/tun2socks.git", dest: "{{ ansible_env.HOME }}/Downloads/tun2socks"}

- name: Remove temporary build directory
  ansible.builtin.file:
    path: "{{ build_dir.path }}"
    state: absent
  when: build_dir.path is defined
