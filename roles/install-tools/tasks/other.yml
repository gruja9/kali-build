---
- name: "Pausing for 15 seconds"
  pause:
    seconds: 15
    
- name: "Installing Obsidian"
  block:
    - name: "Copying Obsidian to PATH"
      copy:
        src: "{{ ansible_env.HOME }}/Downloads/obsidian"
        dest: "/usr/local/bin/obsidian"
        mode: 0755
      become: true

    - name: "Removing old Obsidian"
      file:
        path: "{{ ansible_env.HOME }}/Downloads/obsidian"
        state: absent

- name: "Configuring WPScan with API Key"
  block:
    - name: "Creating ~/.wpscan directory"
      file:
        path: "{{ ansible_env.HOME }}/.wpscan"
        state: directory

    - name: "Copying YAML file to ~/.wpscan/"
      copy:
        src: "{{ role_path }}/files/wpscan-scan.yml"
        dest: "{{ ansible_env.HOME }}/.wpscan/scan.yml"

    - name: "Setting the API Key"
      lineinfile:
        path: "{{ ansible_env.HOME }}/.wpscan/scan.yml"
        regexp: "WPSCAN_API_KEY"
        line: "api_token: {{ wpscan_api_key }}"

- name: "Installing BloodHound"
  block:
    - name: "Configuring initial password for Neo4j"
      shell: "JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64 /usr/share/neo4j/bin/neo4j-admin set-initial-password neo4j"
      become: true
      become_method: sudo

    - name: "Making the BloodHound binary executable"
      file:
        path: "{{ ansible_env.HOME }}/Downloads/BloodHound-linux-x64/BloodHound"
        state: file
        mode: u+x

    - name: "Creating BloodHound config directory"
      file:
        path: "{{ ansible_env.HOME }}/.config/bloodhound"
        state: directory

    - name: "Downloading custom queries"
      expect:
        command: "/usr/bin/ruby {{ ansible_env.HOME }}/Downloads/bqm/bin/bqm -o {{ ansible_env.HOME }}/.config/bloodhound/customqueries.json"
        responses:
          "Do you want to overwrite it?": "1"
          "What to do with the existing queries?": "d"